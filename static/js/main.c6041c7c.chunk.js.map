{"version":3,"sources":["firebase/config.js","hooks/UseFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timeStamp","FieldValue","serverTimestamp","UseFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImage","console","log","className","map","motion","div","key","onClick","url","whileHover","opacity","layout","src","alt","initial","animate","transition","delay","Modal","selectedImage","e","target","classList","contains","img","y","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","type","onChange","selected","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6041c7c.chunk.js","sourcesContent":["\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyC514O_wkOMgNSYix1O0-fBvJOH_IGO-c8\",\r\n    authDomain: \"ninja-clone-firegram.firebaseapp.com\",\r\n    projectId: \"ninja-clone-firegram\",\r\n    storageBucket: \"ninja-clone-firegram.appspot.com\",\r\n    messagingSenderId: \"603597358411\",\r\n    appId: \"1:603597358411:web:0ef4387e3e9998cddc14ce\"\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n const projectStorage = firebase.storage();\r\n const projectFirestore = firebase.firestore();\r\nconst timeStamp = firebase.firestore.FieldValue.serverTimestamp\r\n\r\nexport {projectFirestore,projectStorage,timeStamp}\r\n\r\n\r\n","import React,{useState,useEffect} from 'react'\r\nimport {projectFirestore} from '../firebase/config'\r\n\r\nconst UseFirestore = (collection) => {\r\n    const [docs,setDocs] = useState([])\r\n\r\n    useEffect(()=>{\r\nconst unsub = projectFirestore.collection(collection)\r\n.orderBy('createdAt','desc')\r\n.onSnapshot(snap=>{\r\n let documents = []\r\n snap.forEach(doc=>{\r\n     documents.push({...doc.data(), id: doc.id})\r\n })\r\n setDocs(documents)\r\n})\r\n\r\nreturn ()=>unsub()\r\n\r\n    },[collection])\r\n\r\n    return {docs}\r\n}\r\n\r\nexport default UseFirestore\r\n","import React from 'react'\r\nimport UseFirestore from '../hooks/UseFirestore'\r\nimport {motion} from 'framer-motion'\r\n\r\nconst ImageGrid = ({setSelectedImage}) => {\r\n\r\n    const {docs} = UseFirestore('images')\r\n    console.log(docs)\r\n\r\n    return (\r\n        <div className='img-grid'>\r\n            {docs && docs.map(doc => {\r\n                return (\r\n                    <motion.div className=\"img-wrap\" key={doc.id} onClick={()=> setSelectedImage(doc.url)} whileHover={{opacity:1}} layout>\r\n                     <img src={doc.url} alt={doc.url} initial={{opacity:0}} animate={{opacity:1}} transition={{delay:3}}/>\r\n                    </motion.div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid\r\n","import React from 'react'\r\nimport {motion} from 'framer-motion'\r\n\r\nconst Modal = ({selectedImage,setSelectedImage}) => {\r\n\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.contains('backdrop')){\r\n          setSelectedImage(null)\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <motion.div className='backdrop' onClick={handleClick} initial={{opacity:0}} animate={{opacity:1}}>\r\n            <motion.img src={selectedImage} alt=\"\" initial={{y:\"-100vh\"}} animate={{y:0}}/>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import { useState, useEffect } from 'react';\r\nimport { projectStorage,projectFirestore,timeStamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection('images')\r\n    \r\n    storageRef.put(file).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const url = await storageRef.getDownloadURL();\r\n      const createdAt =timeStamp()\r\n      collectionRef.add({url,createdAt});\r\n      setUrl(url);\r\n    });\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react'\r\nimport useStorage from '../hooks/useStorage'\r\nimport{motion} from 'framer-motion'\r\n\r\nconst ProgressBar = ({file,setFile}) => {\r\n\r\n    const {url,progress} = useStorage(file)\r\n    console.log(progress,url)\r\n\r\n    useEffect(()=>{\r\n     if(url){\r\n         setFile(null)\r\n     }\r\n    },[url,setFile])\r\n\r\n    return (\r\n    <motion.div className=\"progress-bar\" initial={{width:0}} animate={{width:progress + '%'}}>\r\n     \r\n    </motion.div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar\r\n","import React, { useState } from 'react'\r\nimport ProgressBar from './ProgressBar'\r\n\r\nconst UploadForm = () => {\r\n\r\n    const [file,setFile] = useState(null)\r\n    const [error,setError] = useState(null)\r\n\r\n    const types = ['image/png','image/jpeg']\r\n\r\nconst changeHandler = e => {\r\n    let selected = e.target.files[0]\r\n    console.log(selected)\r\n    if(selected && types.includes(selected.type)){\r\n        setFile(selected)\r\n        setError('')\r\n    }\r\n    else{\r\n        setFile(null)\r\n        setError('Please select png and jpeg type image')\r\n    }\r\n}\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n            <input type=\"file\" onChange={changeHandler}/>\r\n            <span>+</span>\r\n            </label>\r\n            <div className=\"output\">\r\n                {error && <div className='error'>{error}</div>}\r\n                {file && <ProgressBar file={file} setFile={setFile}/>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UploadForm\r\n","import React from 'react';\nimport { useState } from 'react';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\n\nfunction App() {\n\n  const [selectedImage,setSelectedImage] = useState()\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm/>\n      <ImageGrid setSelectedImage={setSelectedImage}/>\n      {selectedImage && <Modal selectedImage={selectedImage} setSelectedImage={setSelectedImage}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}